name: Android Unit Tests

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    paths:
      - .github/workflows/android-unit-tests.yml
      - android/**
      - fastlane/**
      - packages/**/android/**
      - tools/**
      - yarn.lock
  pull_request:
    paths:
      - .github/workflows/android-unit-tests.yml
      - android/**
      - fastlane/**
      - packages/**/android/**
      - tools/**
      - yarn.lock

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NDK_ABI_FILTERS: x86
      GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=1024m
    steps:
      - name: ⬢ Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17'
      - name: 👀 Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: 🔨 Use JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: ♻️ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ♻️ Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 🧶 Install node modules in root dir
        run: yarn install --frozen-lockfile
      - name: ♻️ Restore node modules in tools
        uses: actions/cache@v2
        with:
          path: tools/node_modules
          key: ${{ runner.os }}-tools-modules-${{ hashFiles('tools/yarn.lock') }}
      - name: ♻️ Restore Gradle caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: 🔧 Patch react-native to support single abi
        run: sed -i 's/^APP_ABI := .*$/APP_ABI := $(if $(NDK_ABI_FILTERS),$(NDK_ABI_FILTERS),$(armeabi-v7a x86 arm64-v8a x86_64))/g' ReactAndroid/src/main/jni/Application.mk
        working-directory: react-native-lab/react-native
      - name: 🎸 Run Spotless lint check
        working-directory: android
        run: ./gradlew spotlessCheck || { echo '::error Spotless lint failed. Run `./gradlew spotlessApply` to automatically fix formatting.' && exit 1; }
      - name: 🎸 Run native Android unit tests
        timeout-minutes: 30
        run: expotools native-unit-tests --platform android
      - name: 🎸 Run instrumented unit tests
        timeout-minutes: 40
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot-save
          script: |
            # wait for emulator to be fully boot up
            sleep 60
            bin/expotools android-native-unit-tests --type instrumented
      - name: 💿 Save test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: packages/**/build/test-results/**/*xml
